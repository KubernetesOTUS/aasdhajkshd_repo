---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend-token
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
      path: "otus"
      version: "v2"
      auth: # https://www.vaultproject.io/docs/auth/token
        tokenSecretRef:
          name: "vault-token"
          key: "token"
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
data:
  token: aHZzLmFqRksydVJPRmRsUDQxV3lnMU81dmh2QQ== # "root"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend-kubernetes
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200"
      path: "otus"
      version: "v2"
      auth: # https://www.vaultproject.io/docs/auth/kubernetes
        kubernetes:
          mountPath: "kubernetes"
          role: "otus"
          serviceAccountRef:
            name: "vault-auth"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-otus-cred-token
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: vault-backend-token
    kind: SecretStore
  target:
    name: otus-cred-token # for test purpose
  data:
  - secretKey: username
    remoteRef:
      key: cred
      property: username
  - secretKey: password
    remoteRef:
      key: cred
      property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-otus-cred-kubernetes
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: vault-backend-kubernetes
    kind: SecretStore
  target:
    name: otus-cred
  data:
  - secretKey: username
    remoteRef:
      key: cred
      property: username
  - secretKey: password
    remoteRef:
      key: cred
      property: password
